"""
Django settings for LibraryProject project.

Generated by 'django-admin startproject' using Django 5.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-f(jzuc&_7j^)2ggu^ud%$pdm_pf5&7vmjtjmfx^#!$_4c^ifr='

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'bookshelf.apps.BookshelfConfig',
    'relationship_app.apps.RelationshipAppConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'csp.middleware.CSPMiddleware',
]

ROOT_URLCONF = 'LibraryProject.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'LibraryProject.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# Redirect to login page
LOGIN_URL = "/relationship_app/login/"

AUTH_USER_MODEL = "bookshelf.CustomUser"

# Set DEBUG to False in production for security reasons
DEBUG = False

# Security settings
SECURE_BROWSER_XSS_FILTER = True  # Enable XSS filtering to protect against cross-site scripting attacks
X_FRAME_OPTIONS = 'DENY'  # Prevent clickjacking
SECURE_CONTENT_TYPE_NOSNIFF = True  # Prevent browsers from MIME-sniffing
CSRF_COOKIE_SECURE = True  # Ensure CSRF cookies are only sent over HTTPS
SESSION_COOKIE_SECURE = True  # Ensure session cookies are only sent over HTTPS


#Configuring Django application to support and enforce HTTPS, 
# protecting the data transmitted between the client and the server. 
# This includes setting up HTTPS redirects, configuring security-related headers, 
# and ensuring that your site is served securely.

# Step 1: Configure Django for HTTPS Support
# Redirect all non-HTTPS requests to HTTPS to ensure secure communication
SECURE_SSL_REDIRECT = True
# SECURE_HSTS_SECONDS: Sets the HTTP Strict Transport Security (HSTS) policy for 1 year, instructing browsers to only access the site via HTTPS.
SECURE_HSTS_SECONDS = 31536000
# SECURE_HSTS_INCLUDE_SUBDOMAINS: Includes all subdomains in the HSTS policy for added security.
SECURE_HSTS_INCLUDE_SUBDOMAINS = True
# SECURE_HSTS_PRELOAD: Allows preloading of the HSTS policy in browsers for improved security.
SECURE_HSTS_PRELOAD = True


# Step 2: Enforce Secure Cookies
# SESSION_COOKIE_SECURE: Ensures that session cookies are only sent over HTTPS connections.
SESSION_COOKIE_SECURE = True
# CSRF_COOKIE_SECURE: Ensures that CSRF cookies are only sent over HTTPS connections.
CSRF_COOKIE_SECURE = True

# Step 3: Implement Secure Headers
# X_FRAME_OPTIONS: Prevents clickjacking by denying framing of the site.
X_FRAME_OPTIONS = 'DENY'
# SECURE_CONTENT_TYPE_NOSNIFF: Prevents browsers from MIME-sniffing a response away from the declared content-type.
SECURE_CONTENT_TYPE_NOSNIFF = True
# SECURE_BROWSER_XSS_FILTER: Enables the browserâ€™s XSS filtering to help prevent cross-site scripting attacks.
SECURE_BROWSER_XSS_FILTER = True


# Step 4: Nginx Configuration
# This configuration sets up Nginx to handle HTTP and HTTPS traffic for the Django application.

# nginx.conf
# server {
#     listen 80;
#     server_name yourdomain.com www.yourdomain.com;
#     return 301 https://$host$request_uri;  # Redirect all HTTP requests to HTTPS
# }

# server {
#     listen 443 ssl;
#     server_name yourdomain.com www.yourdomain.com;

#     ssl_certificate /path/to/your/fullchain.pem;  # Path to your SSL certificate
#     ssl_certificate_key /path/to/your/privkey.pem;  # Path to your SSL certificate key

#     location / {
#         proxy_pass http://localhost:8000;  # Assuming your Django app is running on port 8000
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#     }
# }